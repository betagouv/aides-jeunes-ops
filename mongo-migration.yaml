---
# This playbook dumps specified collections from MongoDB on Server 1,
# fetches the dumps to the local Ansible controller,
# copies the dumps to Server 2, and restores them there.
- name: Dump MongoDB collections from Server 1
  hosts: server1
  gather_facts: false
  become: true
  tasks:
    - name: Create MongoDB dump directory
      ansible.builtin.file:
        path: /tmp/mongodump
        state: directory
        mode: '0755'

    - name: Dump MongoDB database with a query
      ansible.builtin.shell: |
        mongodump \
          --db {{ database_name }} \
          --collection {{ item.key }} \
          --query '{{ item.value }}' \
          --archive=/tmp/mongodump/{{ item.key }}.tar.gz \
          --gzip
      register: dump_result
      changed_when: dump_result.rc == 0
      with_dict: "{{ mongodb_collections }}"

    - name: Fetch MongoDB dump to local machine
      ansible.builtin.fetch:
        src: /tmp/mongodump/{{ item.key }}.tar.gz
        dest: /tmp/
        flat: true
      with_dict: "{{ mongodb_collections }}"

    - name: Remove MongoDB dump archives from server
      ansible.builtin.file:
        path: /tmp/mongodump/{{ item.key }}.tar.gz
        state: absent
      with_dict: "{{ mongodb_collections }}"

- name: Restore MongoDB collections on Server 2
  hosts: aides_jeunes_staging
  gather_facts: false
  tasks:
    - name: Copy MongoDB dump to remote server
      ansible.builtin.copy:
        src: /tmp/{{ item.key }}.tar.gz
        dest: /tmp/mongodump/
        mode: '0644'
      with_dict: "{{ mongodb_collections }}"

    - name: Restore MongoDB database from dump
      ansible.builtin.shell: |
        mongorestore \
          --gzip \
          --archive=/tmp/mongodump/{{ item.key }}.tar.gz
      register: restore_result
      changed_when: restore_result.rc == 0
      with_dict: "{{ mongodb_collections }}"

    - name: Remove MongoDB dump and archive from local machine
      connection: local
      ansible.builtin.file:
        path: /tmp/{{ item.key }}.tar.gz
        state: absent
      with_dict: "{{ mongodb_collections }}"

    - name: Remove MongoDB dumps and archive from remote server
      ansible.builtin.file:
        path: /tmp/mongodump/{{ item.key }}.tar.gz
        state: absent
      with_dict: "{{ mongodb_collections }}"
